ARG BASE_IMAGE=rocm/pytorch:rocm7.0.2_ubuntu24.04_py3.12_pytorch_release_2.8.0

ARG COMMON_WORKDIR=/app

FROM ${BASE_IMAGE} AS base_build

ARG PYTORCH_ROCM_ARCH
ENV PYTORCH_ROCM_ARCH=${PYTORCH_ROCM_ARCH}

# Install some basic utilities
RUN apt-get update -q -y && apt-get install -q -y \
    sqlite3 libsqlite3-dev libfmt-dev libmsgpack-dev libsuitesparse-dev \
    apt-transport-https ca-certificates wget curl

ARG COMMON_WORKDIR
WORKDIR ${COMMON_WORKDIR}

ENV DEBIAN_FRONTEND=noninteractive

RUN --mount=type=cache,id=pip,target=/root/.cache/pip \
    pip install -U packaging 'cmake<4' ninja wheel 'setuptools<80' pybind11 Cython

FROM scratch AS dependencies
COPY vllm/* /app/dependencies/

FROM base_build AS final
RUN --mount=type=bind,from=dependencies,src=/app,target=/install \
    --mount=type=cache,id=pip,target=/root/.cache/pip \
    (find /install/dependencies -type f -name '*.whl' | grep -vP '/vllm-' | xargs pip install) \
    && pip install /install/dependencies/vllm*.whl \
    && cp /install/dependencies/versions.txt /app/versions.txt

ENV RAY_EXPERIMENTAL_NOSET_ROCR_VISIBLE_DEVICES=1
ENV RAY_EXPERIMENTAL_NOSET_HIP_VISIBLE_DEVICES=1
ENV TOKENIZERS_PARALLELISM=false

# ENV that can improve safe tensor loading, and end-to-end time
ENV SAFETENSORS_FAST_GPU=1

# Performance environment variable.
ENV HIP_FORCE_DEV_KERNARG=1

CMD ["vllm"]
